---
- name: install tomcat
  hosts: all
  become: yes
  vars:
    username: tomcat
    groupname: tomcat
    homedir: /opt/tomcat
    shell: /bin/false
    version: 21
    tomcat_major_version: 10
    tomcat_specific_version: "10.1.34"

#       Create Tomcat User

  tasks:  
    - name: create a user
      ansible.builtin.user:
        name: "{{ username }}"
        home: "{{ homedir }}"
        shell: "{{ shell }}"
        state: present

#   Install Java (Default JDK)

    - name: update & install java default
      ansible.builtin.apt:
        update_cache: yes
        name: "openjdk-{{ version }}-jdk"
        state: present

#    Create a directory if it does not exist

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ homedir }}/apache-tomcat-{{ tomcat_specific_version }}"
        state: directory
        mode: '0755'

#    Download Tomcat Archive

    - name: Download file from a file path
      ansible.builtin.get_url:
        url: "https://dlcdn.apache.org/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_specific_version }}/bin/apache-tomcat-{{ tomcat_specific_version }}.tar.gz"
        dest: "{{ homedir }}/apache-tomcat-{{ tomcat_specific_version }}.tar.gz"

#      Unarchive Tomcat

    - name: Unarchive a file with extra options
      ansible.builtin.unarchive:
        src: "{{ homedir }}/apache-tomcat-{{ tomcat_specific_version }}.tar.gz"
        dest: "{{ homedir }}/apache-tomcat-{{ tomcat_specific_version }}"
        extra_opts:
          - --strip-components=1
        remote_src: yes


#    creating symbolic lnk

    - name: Create a symbolic link
      ansible.builtin.file:
        src: "{{ homedir }}/apache-tomcat-{{ tomcat_specific_version }}"
        dest: "{{ homedir }}/latest"
        owner: "{{ username }}"
        group: "{{ groupname }}"
        state: link
        force: yes


# Run the command and store the output in the variable 'shell_files'

    - name: Return motd to registered var
      ansible.builtin.command: sudo sh -c 'ls /opt/tomcat/latest/bin/*.sh'
      register: shell_files


# Print the output of the 'shell_files' variable

    - name: print the value
      debug: 
      var: shell_files
    
#      Set Permissions and Ownership    


    - name: Set ownership for /opt/tomcat directory
      ansible.builtin.file:
        path: "{{ homedir }}"
        state: directory
        recurse: yes
        owner: "{{ username }}"
        group: "{{ groupname }}"

#      Set Execute Permissions for Tomcat bin Directory

    - name: Giving execute permissions to the user for Tomcat bin directory
      ansible.builtin.file:
        path: "{{ homedir }}/bin"
        mode: u+x
        recurse: yes


##     Servicefile for Tomcat service

    - name: service file
      ansible.builtin.template:
        src: template/tomcat-service.j2
        dest: /etc/systemd/system/tomcat.service

##     Reload systemd and Enable Tomcat Service

    - name: daemon reload
      ansible.builtin.systemd:
        daemon_reload: yes
        name: tomcat
        state: started
        enabled: yes
